version: '3.6'

services:

  # redis standalone - uncomment
  #  redis:
  #    image: redis:alpine
  #    command: redis-server /usr/local/redis.conf
  #    configs:
  #      - source: redis_config
  #        target: /usr/local/redis.conf
  #    hostname: redis
  #    networks:
  #      - backend

  #  minio:
  #    image: minio/minio:RELEASE.2018-09-12T18-49-56Z
  #    volumes:
  #      - minio:/data
  #    ports:
  #      - "9000"
  #    command: server /data
  #    environment:
  #      MINIO_ACCESS_KEY:  minio
  #      MINIO_SECRET_KEY:   minio123
  #    networks:
  #      - backend

  dscheduler:
    image: daskdev/dask
    ports:
      - '8786:8786'
      - '8787:8787'
    command: ['dask-scheduler']
    networks:
      - backend
    deploy:
      mode: replicated
      replicas: 1

  dworker:
#    image: daskdev/dask
#    command: ['dask-worker','dscheduler:8786']
    image: sirisurab/tp-app:latest
    command: ./src/dask_worker.py
    networks:
      - backend
    restart: "no"
    depends_on:
      - dscheduler
    deploy:
      mode: replicated
      replicas: 5


  g_cabs_creator:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_creator.py cl-gcabs 2016
    restart: on-failure
    networks:
    - backend
    deploy:
      mode: replicated
      replicas: 0

  g_cabs_loader:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_performer.py dl-gcabs
    restart: on-failure
    networks:
    - backend
    depends_on:
    - g_cabs_creator
    deploy:
      mode: replicated
      replicas: 0

  g_cabs_cleaner:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_performer.py cl-gcabs
    restart: on-failure
    networks:
    - backend
    depends_on:
    - g_cabs_creator
    deploy:
      mode: replicated
      replicas: 0

  g_cabs_resampler:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_performer.py rs-gcabs
    restart: on-failure
    networks:
    - backend
    depends_on:
    - g_cabs_creator
    deploy:
      mode: replicated
      replicas: 0

  g_cabs_regrouper:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/regrouper.py rg-gcabs
    restart: on-failure
    networks:
    - backend
    deploy:
      mode: replicated
      replicas: 0

  y_cabs_creator:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_creator.py dl-ycabs 2017
    restart: on-failure
    networks:
    - backend
    deploy:
      mode: replicated
      replicas: 0

  y_cabs_loader:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_performer.py dl-ycabs
    restart: on-failure
    networks:
    - backend
    depends_on:
    - y_cabs_creator
    deploy:
      mode: replicated
      replicas: 0

  y_cabs_cleaner:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/dask_performer.py cl-ycabs 2017
    restart: "no"
    networks:
    - backend
    depends_on:
     - dscheduler
     - dworker
    deploy:
      mode: replicated
      replicas: 1

  y_cabs_resampler:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/dask_performer.py rs-ycabs 2016
    restart: "no"
    networks:
    - backend
    depends_on:
    - dscheduler
    - dworker
    deploy:
      mode: replicated
      replicas: 0

  turnstile_creator:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_creator.py rs-transit 2016
    restart: on-failure
    networks:
    - backend
    deploy:
      mode: replicated
      replicas: 0

  turnstile_loader:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_performer.py dl-transit
    restart: on-failure
    networks:
    - backend
    depends_on:
    - turnstile_creator
    deploy:
      mode: replicated
      replicas: 0

  turnstile_cleaner:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_performer.py cl-transit
    restart: on-failure
    networks:
    - backend
    depends_on:
    - turnstile_creator
    deploy:
      mode: replicated
      replicas: 0


  turnstile_resampler:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_performer.py rs-transit
    restart: on-failure
    networks:
    - backend
    depends_on:
    - turnstile_creator
    deploy:
      mode: replicated
      replicas: 0

  turnstile_regrouper:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/regrouper.py rg-transit
    restart: on-failure
    networks:
    - backend
    deploy:
      mode: replicated
      replicas: 0

  traffic_creator:
    build: .
    image: sirisurab/tp-app:latest
    restart: on-failure
    networks:
    - backend
    command: ./src/task_creator.py dl-traffic
    depends_on:
    - redis
    deploy:
      mode: replicated
      replicas: 0

  traffic_loader:
    build: .
    image: sirisurab/tp-app:latest
    restart: on-failure
    networks:
    - backend
    command: ./src/task_performer.py dl-traffic
    depends_on:
    - traffic_creator
    deploy:
      mode: replicated
      replicas: 0

  refbase_loader:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/refbase_loader.py transit cabs
    restart: on-failure
    networks:
    - backend
    deploy:
      mode: replicated
      replicas: 0

  geo_merger:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/geo_merger.py 5
    restart: on-failure
    networks:
    - backend
    deploy:
      mode: replicated
      replicas: 0

  plotter:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/plotter.py pl-1M-16-17 5 'ASTORIA BLVD' '5 AV/59 ST' 'TIMES SQ-42 ST' '14 ST-UNION SQ'
    restart: on-failure
    networks:
    - backend
    deploy:
      mode: replicated
      replicas: 0

networks:
  backend:
    external:
      name: backend

# redis cluster - uncomment
#    external:
# redis standalone - uncomment
#    driver: overlay
#    attachable: true
#    ipam:
#      config:
#        - subnet: 10.0.0.0/24
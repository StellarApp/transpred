version: '3.6'

services:

# redis standalone - uncomment
#  redis:
#    image: redis:alpine
#    command: redis-server /usr/local/redis.conf
#    configs:
#      - source: redis_config
#        target: /usr/local/redis.conf
#    hostname: redis
#    networks:
#      - backend

#  minio:
#    image: minio/minio:RELEASE.2018-09-12T18-49-56Z
#    volumes:
#      - minio:/data
#    ports:
#      - "9000"
#    command: server /data
#    environment:
#      MINIO_ACCESS_KEY:  minio
#      MINIO_SECRET_KEY:   minio123
#    networks:
#      - backend


  g_cabs_combiner:
    build: .
    image: sirisurab/tp-app:latest
#    command: ./bin/combiner_gcabs.sh 2016 2017
    command: ./src/task_creator.py dl_gcabs 2016
    restart: on-failure
#    volumes:
#      - sirisurab-tp:/data
    networks:
      - backend
#    depends_on:
#      - minio
#      - redis
    deploy:
      mode: replicated
      replicas: 0

  g_cabs_fetcher:
    build: .
    image: sirisurab/tp-app:latest
#    command: ./bin/fetcher_gcabs.sh
    command: ./src/task_performer.py dl_gcabs
    restart: on-failure
#    volumes:
#      - sirisurab-tp:/data
    networks:
      - backend
    depends_on:
      - g_cabs_combiner
    deploy:
      mode: replicated
      replicas: 0

#  y_cabs_combiner:
#    build: .
#    image: sirisurab/tp-app:latest
#    container_name: y_cabs_combiner
#    networks:
#      - backend
#    command: ./bin/combiner_ycabs.sh 2016 2017
#    volumes:
#      - tp:/app
#    depends_on:
#      - redis

#  y_cabs_fetcher:
#    build: .
#    container_name: y_cabs_fetcher
#    networks:
#      - backend
#    command: ./bin/fetcher_ycabs.sh
#    volumes:
#      - tp:/app
#    depends_on:
#      - y_cabs_combiner
#    deploy:
#      mode: replicated
#      replicas: 8

  turnstile_combiner:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_creator.py dl_transit 2016
    restart: on-failure
    networks:
      - backend
#    command: ./bin/combiner_turnstile.sh 2016 2017
#    volumes:
#      - tp:/app
#    depends_on:
#      - redis
    deploy:
      mode: replicated
      replicas: 0

  turnstile_fetcher:
    build: .
    image: sirisurab/tp-app:latest
    command: ./src/task_performer.py dl_transit
    restart: on-failure
    networks:
      - backend
#    command: ./bin/fetcher_turnstile.sh
#    volumes:
#      - tp:/app
    depends_on:
      - turnstile_combiner
    deploy:
      mode: replicated
      replicas: 0

#  stations_fetcher:
#    build: .
#    image: sirisurab/tp-app:latest
#    container_name: stations_fetcher
#    command: ./bin/stations.sh
#    volumes:
#      - tp:/app

  traffic_combiner:
    build: .
    image: sirisurab/tp-app:latest
    restart: on-failure
    networks:
      - backend
    command: ./src/task_creator.py dl_traffic
#    volumes:
#      - tp:/app
    depends_on:
      - redis
    deploy:
      mode: replicated
      replicas: 1

  traffic_fetcher:
    build: .
    image: sirisurab/tp-app:latest
    restart: on-failure
    networks:
      - backend
    command: ./src/task_performer.py dl_traffic
#    volumes:
#      - tp:/app
    depends_on:
      - traffic_combiner
    deploy:
      mode: replicated
      replicas: 20

#volumes:
#  tp:
#    driver: convoy
#  minio:
#  sirisurab-tp:
#    external: true


#configs:
#  redis_config:
#    file: ./config/redis.conf

networks:
  backend:
    external:
      name: backend
# redis cluster - uncomment
#    external:
# redis standalone - uncomment
#    driver: overlay
#    attachable: true
#    ipam:
#      config:
#        - subnet: 10.0.0.0/24